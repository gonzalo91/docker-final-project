# Docs: https://docs.docker.com/compose/compose-file/compose-file-v3/

version: '3.4'

services:
  back-end:
    image: zalollauri/loan-back-end:1.1.0
    build: ./back-end
    container_name: back-end
    restart: unless-stopped
    tty: true    
    networks:
      - backend-network  
    deploy:
      replicas: 2 
      mode: replicated
      labels: [APP=BACKEND] 
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 120s
    environment:
      - APP_KEY=${BACK_END_APP_KEY:-}
      - JWT_SECRET=${JWT_SECRET:-secret}      
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-loans}
      - DB_USERNAME=${DB_USERNAME:-user}
      - DB_PASSWORD=${DB_PASSWORD:-pass_user}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PASSWORD=${REDIS_PASS:-}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-1}
      - REDIS_REQUIRE_SSL=${REDIS_REQUIRE_SSL:-false}
      - SESSION_DRIVER=${BACK_END_APP_SESSION_DRIVER:-file}
      - APP_ENV=${APP_ENV:-production}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT:-2525}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-tls}
      - MAIL_NOTIFICATION=${MAIL_NOTIFICATION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
  
 
  worker:
    image: zalollauri/loan-worker:1.0.0
    build: ./python-worker
    container_name: worker
    restart: unless-stopped
    tty: true    
    networks:
      - worker-network
    deploy:    
      mode: replicated
      replicas: 2
    environment:      
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-loans}
      - DB_USERNAME=${DB_USERNAME:-user}
      - DB_PASSWORD=${DB_PASSWORD:-pass_user}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PASS=${REDIS_PASS:-}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_REQUIRE_SSL=${REDIS_REQUIRE_SSL:-false}
      - APP_ENV=${APP_ENV:-production}

  proxy: 
    image: zalollauri/loan.proxy:1.0.0
    container_name: proxy
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"   
    volumes:
      - /usr/local/ssl-certificates/:/usr/local/ssl-certificates/ 
    depends_on:
      - back-end
      - worker
      - web-socket
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
    networks:
      - backend-network

  web-socket:
    image: zalollauri/loan.web-sockets:1.0.0
    container_name: web-socket
    build: ./web-socket
    restart: unless-stopped    
    tty: true
    environment:      
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PASS=${REDIS_PASS:-}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_REQUIRE_SSL=${REDIS_REQUIRE_SSL:-false}
      - JWT_SECRET=${JWT_SECRET:-secret}
      - APP_ENV=${APP_ENV:-production}
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - worker-network
      - backend-network

networks:
  backend-network:
    driver: overlay
  worker-network:
    driver: overlay